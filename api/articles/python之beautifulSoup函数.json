{"title":"python之beautifulSoup函数","slug":"python之beautifulSoup函数","date":"2020-01-30T09:43:33.000Z","updated":"2020-01-30T09:59:10.510Z","comments":true,"path":"api/articles/python之beautifulSoup函数.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h2 id=\"BeautifulSoup库\"><a href=\"#BeautifulSoup库\" class=\"headerlink\" title=\"BeautifulSoup库\"></a>BeautifulSoup库</h2><h6 id=\"1-处理数据分为两步：解析数据-和-提取数据，解析数据指将网页源代码解析成-Python-能“读懂”的格式，而提取数据则是指将网页源代码中无关数据过滤掉，只提取出我们所需要的数据。\"><a href=\"#1-处理数据分为两步：解析数据-和-提取数据，解析数据指将网页源代码解析成-Python-能“读懂”的格式，而提取数据则是指将网页源代码中无关数据过滤掉，只提取出我们所需要的数据。\" class=\"headerlink\" title=\"1 处理数据分为两步：解析数据 和 提取数据，解析数据指将网页源代码解析成 Python 能“读懂”的格式，而提取数据则是指将网页源代码中无关数据过滤掉，只提取出我们所需要的数据。\"></a>1 处理数据分为两步：解析数据 和 提取数据，解析数据指将网页源代码解析成 Python 能“读懂”的格式，而提取数据则是指将网页源代码中无关数据过滤掉，只提取出我们所需要的数据。</h6><p>安装步骤：<br>    cd切换到 python 安装目录 Scripts<br> 输入：pip install beautifulsoup4</p>\n<h5 id=\"2-BeautifulSoup-格式-BeautifulSoup-HTML-文本，解析器\"><a href=\"#2-BeautifulSoup-格式-BeautifulSoup-HTML-文本，解析器\" class=\"headerlink\" title=\"2.BeautifulSoup 格式 : BeautifulSoup(HTML 文本，解析器)\"></a>2.BeautifulSoup 格式 : BeautifulSoup(HTML 文本，解析器)</h5><h5 id=\"3-返回类型：type-soup-值-返回-BeautifulSoup-对象\"><a href=\"#3-返回类型：type-soup-值-返回-BeautifulSoup-对象\" class=\"headerlink\" title=\"3.返回类型：type(soup)  值  返回 .BeautifulSoup 对象\"></a>3.返回类型：type(soup)  值  返回 .BeautifulSoup 对象</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">soup = BeautifulSoup(res.text,&apos;html.parser&apos;)</span><br><span class=\"line\">print(type(soup))</span><br><span class=\"line\">输出  &lt;class &apos;bs4.BeautifulSoup&apos;&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-提供方法：\"><a href=\"#4-提供方法：\" class=\"headerlink\" title=\"4.提供方法：\"></a>4.提供方法：</h5><ul>\n<li>find()    返回符合条件的 <strong>首个</strong> 元素</li>\n<li><p>find_all()   返回符合条件的 <strong>所有</strong> 元素</p>\n<p> 注意：这两个方法都支持传入html标签、html属性. 多个 HTML 属性进行刷选。<br> class 是 Python 中定义类的关键字   ,  class_ 表示 HTML 中的 class ,  id  表示 HTML 中的 id</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">&apos;user-agent&apos;: &apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">res = requests.get(&apos;https://book.douban.com/top250&apos;, headers=headers)</span><br><span class=\"line\">soup = BeautifulSoup(res.text,&apos;html.parser&apos;)</span><br><span class=\"line\">print(soup.find(&apos;span&apos;,class_=&apos;inq&apos;))</span><br><span class=\"line\"></span><br><span class=\"line\">输出&lt;span class=&quot;inq&quot;&gt;为你，千千万万遍&lt;/span&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">`</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-Tag对象-find-和-find-all-返回值\"><a href=\"#5-Tag对象-find-和-find-all-返回值\" class=\"headerlink\" title=\"5. Tag对象    find()  和 find_all() 返回值\"></a>5. Tag对象    find()  和 find_all() 返回值</h5><ul>\n<li>tag.text   获取标签的文本内容</li>\n<li>tag[‘ 属性值 ‘] 获取标签属性值</li>\n</ul>\n<h5 id=\"6-CSS选择器\"><a href=\"#6-CSS选择器\" class=\"headerlink\" title=\"6.CSS选择器\"></a>6.CSS选择器</h5><p>  在 CSS 选择器中，# 代表 id，. 代表 class。BeautifulSoup 对象 有一个 select() 方法，我们将 CSS 选择器 传进去即可直接找到我们需要的元素。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">&apos;user-agent&apos;: &apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">res = requests.get(&apos;https://book.douban.com/top250&apos;, headers=headers)</span><br><span class=\"line\">soup = BeautifulSoup(res.text,&apos;html.parser&apos;)</span><br><span class=\"line\">tag =soup.select(&apos;.pl2 a&apos;)</span><br><span class=\"line\">for i in tag:</span><br><span class=\"line\">name =&apos;&apos;.join(i.text.split())</span><br><span class=\"line\">link = i[&apos;href&apos;]</span><br><span class=\"line\">print(name,link)</span><br><span class=\"line\"></span><br><span class=\"line\">输出： 追风筝的人   https://book.douban.com/subject/1770782/</span><br><span class=\"line\">解忧杂货店 https://book.douban.com/subject/25862578/</span><br><span class=\"line\">小王子 https://book.douban.com/subject/1084336/</span><br><span class=\"line\">省略。。。。。</span><br></pre></td></tr></table></figure>","categories":[],"tags":[{"name":"python","slug":"python","count":3,"path":"api/tags/python.json"}]}