{"title":"Js基础（1）","slug":"Js基础（1）","date":"2019-08-20T15:41:53.000Z","updated":"2019-08-20T16:16:50.472Z","comments":true,"path":"api/articles/Js基础（1）.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>所有数字都是Number 包括：所有数字：infinity \\ Nan<br>赋值决定变量的类型；动态数据的类型；</p>\n<ol>\n<li>空字符：也是字符类型</li>\n<li>值是undefind ;类型也是undefind;</li>\n<li>转换：parseInt() 字符串转换成数字</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b =parseInt(a);   直接截取整数部分。如果不能转换 返回NAN;</span><br><span class=\"line\">console.log(parseInt(21,8)) 进制 2*8+1 输出：17；</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>转换：parseFloat 如果不能转换 返回NAN;</li>\n<li><p>字符串：数字+空字符；var c=b +””;</p>\n</li>\n<li><p>只要出现了undefind 参与运算，结果都是NaN</p>\n</li>\n<li>false,true,null,都能进行运算<br>null 转换0； true 转换 1，false转换：0 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(3+null); //3</span><br><span class=\"line\">console.log(3+ true) //4</span><br><span class=\"line\">console.log(3+ false) //3</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"不纯的数字无法转换：\"><a href=\"#不纯的数字无法转换：\" class=\"headerlink\" title=\"不纯的数字无法转换：\"></a>不纯的数字无法转换：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(3*“8天”)；//NaN</span><br><span class=\"line\">console.log(3*undefind)； 输出结果；//NaN</span><br><span class=\"line\">console.log(6/0) //Infinity</span><br><span class=\"line\">console.log(0/0) //NaN</span><br><span class=\"line\">console.log(Infinity - Infinity) //NaN</span><br><span class=\"line\">console.log(Infinity / Infinity) //NaN</span><br></pre></td></tr></table></figure>\n<h5 id=\"短路运算：\"><a href=\"#短路运算：\" class=\"headerlink\" title=\"短路运算：\"></a>短路运算：</h5><ul>\n<li>a &amp;&amp; b ,a如果是一个false,那么不会管b是什么，直接输出false就行了，直接输出a</li>\n<li>a &amp;&amp; b, a如果是一个true,那么也不会管b是什么，直接把b当作结果结果输出了。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">false &amp;&amp; true;  //false;</span><br><span class=\"line\">true &amp;&amp; true; //1</span><br><span class=\"line\">true &amp;&amp; &apos;12&apos;  // &apos;12&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"短路或-a-b\"><a href=\"#短路或-a-b\" class=\"headerlink\" title=\"短路或|| a||b\"></a>短路或|| a||b</h5><ol>\n<li><p>计算机发现a 为真，那么则仍a ,如果a是假，那么b;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 || 18 //前面假，仍后面</span><br><span class=\"line\">null || 1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算：先计算括号， &amp;&amp;  || </p>\n</li>\n<li>运算符的计算顺序</li>\n</ol>\n<ul>\n<li>++ –！贴身  —&gt; 数学 —-&gt;比较 —-&gt; </li>\n</ul>\n<h5 id=\"逻辑-—-gt-赋值\"><a href=\"#逻辑-—-gt-赋值\" class=\"headerlink\" title=\"逻辑 —-&gt; 赋值\"></a>逻辑 —-&gt; 赋值</h5><ol>\n<li>关系运算的结果本身就是boolean 值。</li>\n<li>语法：switch() {case ‘ ‘:alert();break;}</li>\n</ol>\n<ul>\n<li>switch 里面可以放变量值  放Boolean 值时； case 语句进行逻辑运算<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switch(true)&#123;</span><br><span class=\"line\">case score&lt;60 : alert(&apos;不及格&apos;); </span><br><span class=\"line\">case score&lt;70: alert(&apos;及格&apos;)；</span><br><span class=\"line\">break;case score&lt;100: alert(&apos;优秀&apos;)； </span><br><span class=\"line\">default: alert(&apos;你输入的成绩有误&apos;)； &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol start=\"3\">\n<li>表达式  ：三元运算：条件 ？ true : flase</li>\n</ol>\n<ul>\n<li>for(var i=1 ; i&lt;100;i++){console.log(‘sh’)}  alert（’跳出循环’)；</li>\n<li>for ； 如果条件表达式为true    执行步骤： var i=1 ;i&lt;100; console.log(‘sh’) ; i++;直到i&gt;100 跳出循环</li>\n<li>for ； 如果条件表达式为flase; 什么也不输出；直接跳出循环； </li>\n</ul>\n","categories":[{"name":"Js","slug":"Js","count":1,"path":"api/categories/Js.json"}],"tags":[{"name":"前端","slug":"前端","count":4,"path":"api/tags/前端.json"},{"name":"JS","slug":"JS","count":1,"path":"api/tags/JS.json"}]}