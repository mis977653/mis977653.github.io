{"title":"HTML基础（4)","slug":"HTML基础（4","date":"2019-02-20T10:39:58.000Z","updated":"2019-02-22T17:00:18.179Z","comments":true,"path":"api/articles/HTML基础（4.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布局模型：</span><br><span class=\"line\">流动布局 flow布局 是网页的默认布局，y</span><br><span class=\"line\">第一点：块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。实际上，块状元素都会以行的形式占据位置。</span><br><span class=\"line\">第二点，在流动模型下，内联元素都会在所处的包含元素内从左到右水平分布显示。</span><br><span class=\"line\"></span><br><span class=\"line\">浮动布局</span><br><span class=\"line\"><span class=\"built_in\">float</span>:  left   |   right</span><br><span class=\"line\">任何元素在默认情况下是不能浮动的，但可以用 CSS 定义为浮动，如 div、p、table、img 等元素都可以被定义为浮动。</span><br><span class=\"line\"></span><br><span class=\"line\">层模型（绝对定位、相对定位，固定定位）</span><br><span class=\"line\">1、绝对定位(position: absolute)</span><br><span class=\"line\">特点：</span><br><span class=\"line\">★元素使用绝对定位之后不占据原来的位置（脱标）</span><br><span class=\"line\">★元素使用绝对定位，位置是从浏览器出发。</span><br><span class=\"line\">★嵌套的盒子，父盒子没有使用定位，子盒子绝对定位，子盒子位置是从浏览器出发。</span><br><span class=\"line\">★嵌套的盒子，父盒子使用绝对定位，子盒子绝对定位，子盒子位置是从父元素位置出发。</span><br><span class=\"line\"></span><br><span class=\"line\">2、相对定位(position: relative)</span><br><span class=\"line\">★使用相对定位，位置从自身出发。</span><br><span class=\"line\">★还占据原来的位置。</span><br><span class=\"line\">★子绝父相（父元素相对定位，子元素绝对定位）</span><br><span class=\"line\">★行内元素使用相对定位不能转行内块</span><br><span class=\"line\"></span><br><span class=\"line\">3、固定定位(position: fixed)</span><br><span class=\"line\">★固定定位之后，不占据原来的位置（脱标）</span><br><span class=\"line\">★元素使用固定定位之后，位置从浏览器出发。</span><br><span class=\"line\">★元素使用固定定位之后，会转化为行内块（不推荐，推荐使用display:inline-block;）</span><br><span class=\"line\"></span><br><span class=\"line\">Flex 布局</span><br><span class=\"line\">Flex 是 Flexible Box 的缩写，意为<span class=\"string\">\"弹性布局\"</span>，用来为盒状模型提供最大的灵活性。 块内元素和行内元素均可使用display:flex</span><br><span class=\"line\">display:flex;</span><br><span class=\"line\">注意，设为 Flex 布局以后，子元素的<span class=\"built_in\">float</span>、clear和vertical-align属性将失效。</span><br><span class=\"line\">容器属性</span><br><span class=\"line\">flex-direction 布局方向  row | row-reverse | column | column-reverse; row:水平： column:垂直</span><br><span class=\"line\">flex-wrap 换行 nowrap | wrap | wrap-reverse</span><br><span class=\"line\">flex-flow  flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap</span><br><span class=\"line\">justify-content 对齐方式 flex-start | flex-end | center | space-between | space-around; space:l两端对齐 间隔对齐</span><br><span class=\"line\">align-items 属性定义项目在交叉轴上如何对齐。flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">align-content align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</span><br><span class=\"line\">flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class=\"line\">项目属性：</span><br><span class=\"line\">order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</span><br><span class=\"line\">flex-grow 属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</span><br><span class=\"line\">flex-shrink 缩小比例，默认为1，</span><br><span class=\"line\">flex-basis 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</span><br><span class=\"line\">flexflex 属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</span><br><span class=\"line\">align-self</span><br></pre></td></tr></table></figure>","categories":[{"name":"HTML","slug":"HTML","count":3,"path":"api/categories/HTML.json"}],"tags":[{"name":"前端","slug":"前端","count":3,"path":"api/tags/前端.json"},{"name":"HTML","slug":"HTML","count":3,"path":"api/tags/HTML.json"}]}