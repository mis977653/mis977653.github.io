{"name":"前端","slug":"前端","count":5,"postlist":[{"title":"HTML基础（1-3)","slug":"HTML基础（1-3","date":"2019-01-22T03:05:04.000Z","updated":"2019-02-21T07:29:56.498Z","comments":true,"path":"api/articles/HTML基础（1-3.json","excerpt":"","keywords":null,"cover":null,"content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### HTML 小结 第一天</span></span><br><span class=\"line\">&lt;!DOCTYPE ：指定html 哪个版本</span><br><span class=\"line\">&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;/h2&gt;...&lt;h6&gt;&lt;/6&gt; 标题标签</span><br><span class=\"line\">&lt;p&gt;&lt;/p&gt; 段落标签，间距比较大</span><br><span class=\"line\">&lt;hr /&gt; 水平线</span><br><span class=\"line\">&lt;br&gt;&lt;/br&gt; 换行标签  强制换行  来源 <span class=\"built_in\">break</span></span><br><span class=\"line\">&lt;em&gt;&lt;/em&gt;&lt;i&gt;&lt;/i&gt; 倾斜体标签</span><br><span class=\"line\">&lt;b&gt;&lt;/b&gt;&lt;strong&gt;&lt;/strong&gt; 加粗标签</span><br><span class=\"line\">&lt;u&gt;&lt;/u&gt;&lt;ins&gt;&lt;/ins&gt; 插入下划线</span><br><span class=\"line\">==================</span><br><span class=\"line\">img  src 代表图片路径 title：鼠标悬停时显示的文字内容   alt:替换文本描述  width,height 一般只写一个，等比例缩放</span><br><span class=\"line\">超链接标签 &lt;a href=<span class=\"string\">\"http://\"</span>  target=<span class=\"string\">\"\"</span>&gt;href属性:链接地址    target属性 <span class=\"string\">\"_black\"</span> ：在新窗口打开页面 ;<span class=\"string\">\"_self\"</span>在本地窗口打开页面</span><br><span class=\"line\">&lt;base target=<span class=\"string\">\"_blank\"</span>:打开新窗口</span><br><span class=\"line\">图片的相对路径 ../代表上一级目录</span><br><span class=\"line\">&lt;ul&gt;无序列表 &lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;一般情况&lt;ul&gt;里面只放&lt;li&gt;标签；&lt;li&gt;里面放其他标签</span><br><span class=\"line\">&lt;ol&gt;有序列表&lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;</span><br><span class=\"line\">&lt;dl&gt;自定义列表 语义化说明：&lt;dl&gt; &lt;dt&gt;1个&lt;/dt&gt;&lt;dd&gt;n++&lt;/dd&gt;    n++ dd对1个dt说明</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### HTML 小结 第二天</span></span><br><span class=\"line\">&lt;table&gt;&lt;/table&gt; 表格标签 &lt;tr&gt;行&lt;td&gt;列&lt;/td&gt;列&lt;td&gt;&lt;/tr&gt;   &lt;th&gt;标题</span><br><span class=\"line\">3参为0 border 0px；cellspacing:0px单元格上下左右的距离；cellpadding:单元格内容的距离</span><br><span class=\"line\">&lt;caption&gt; 表标题标签  在table 标签之后，文字居中</span><br><span class=\"line\">rowspan  合并单元格行    colspan 合并列</span><br><span class=\"line\">行内样识  标签 style =<span class=\"string\">\"标签属性：值; 标签属性：值\"</span></span><br><span class=\"line\">外部样式 ：&lt;link rel =<span class=\"string\">\"stylesheet\"</span>  href=<span class=\"string\">\"css地址.css\"</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### HTML 小结 第三天</span></span><br><span class=\"line\">类名选择器.  样式表里面显示前缀 .  &lt;标签 class=<span class=\"string\">\"a b\"</span>&gt;多个类名 按照css 样式后者覆盖前者样式</span><br><span class=\"line\">id 选择器 样式表前缀显示<span class=\"comment\">#值名 &#123; &#125;   &lt;标签 id =\"\"/&gt;</span></span><br><span class=\"line\">通配符选择器 * &#123; &#125;</span><br><span class=\"line\">后代选择器：（父）标签  空格（子）标签 &#123;&#125;</span><br><span class=\"line\">子代选择器 （父标签）&gt;（子标签） &gt; a &#123;&#125; 子代选择器</span><br><span class=\"line\">并集选择器： 用逗号隔开  ，选择器+,+选择器+,+选择器&#123;属性:值;&#125;</span><br><span class=\"line\">交接选择器：标签属性+标签属性 标签+类(id)选择器&#123;属性:值;&#125;</span><br><span class=\"line\">字体：常用微软雅黑、宋体  表现形式中文、英文、unicode 编码（编译更块）可在控制台  输入escape(<span class=\"string\">\"字体\"</span>)-》回车 替换% 为  \\</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">字体  font-faimly属性: 逗号隔开，属性值有特殊符号用双引号</span><br><span class=\"line\">font-weight:字体粗细normal |bold |  400正常  加粗700 与ie 56789兼容  建议 写数值</span><br><span class=\"line\">字体联写  ：font :&#123;font-style  font-weight font-size/line-height font-family&#125;  [size family 必须保留]</span><br><span class=\"line\">eg：font&#123;itatic 700 16px/40px 微软雅黑&#125;</span><br><span class=\"line\">搜索标签属性：&lt;em&gt; &lt;/em&gt;</span><br><span class=\"line\">字体缩进 text-indent</span><br><span class=\"line\">文本装饰：text-decoratation :none /underline（下划线） /overline（上划线）/line-through</span><br><span class=\"line\">文字间距：letter-spacing:15px;</span><br><span class=\"line\">行间距：line-hight:xxpx;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">样式三种写法 ：内嵌式 &lt;style <span class=\"built_in\">type</span> =<span class=\"string\">\"text/css\"</span>&gt;&lt;/style&gt;</span><br><span class=\"line\">               外联式&lt;link style=<span class=\"string\">\"stylesheet\"</span> rel=<span class=\"string\">\"xxx.css\"</span>&gt;</span><br><span class=\"line\">               行内样式&lt;h1 style=<span class=\"string\">\"font-size:20px; color:red;\"</span>&gt;</span><br><span class=\"line\">行内元素：span 在一行显示 无宽高margin padding 无效  行转块：display:block  典型代表：span a strong em del ins</span><br><span class=\"line\">块内元素 独占一行 宽度随浏览器100%随访 有宽高        块转行：display:inline 把行内元素  典型代表： div h1-h6 p ul li</span><br><span class=\"line\">行内块元素：input img  dispaly:inline-block 在一行显示 可以设置宽高</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">css 三大特性：</span><br><span class=\"line\">层叠性、继承性、</span><br><span class=\"line\">层叠性：后面的样式会覆盖前面的样式</span><br><span class=\"line\">继承性：嵌套的关系 文字的大小、颜色、粗细、风格、行高可以继承 文字所有特性都可以继承</span><br><span class=\"line\">h系列不能继承文字大小。</span><br><span class=\"line\">a标签不能继承文字颜色。</span><br><span class=\"line\">优先级：继承的权重为0 权重会叠加</span><br><span class=\"line\">1000y以上!importment----&gt;行内选择器1000-----&gt;id选择器-100------&gt;类选择器-10-----&gt;标签选择器1-------&gt;默认样式0</span><br><span class=\"line\"></span><br><span class=\"line\">链接伪类</span><br><span class=\"line\">a:link&#123;属性:值;&#125;  a&#123;属性:值&#125;效果是一样的。</span><br><span class=\"line\">a:link&#123;属性:值;&#125;       链接默认状态</span><br><span class=\"line\">a:visited&#123;属性:值;&#125;     链接访问之后的状态</span><br><span class=\"line\">a:hover&#123;属性:值;&#125;      鼠标放到链接上显示的状态</span><br><span class=\"line\">a:active&#123;属性:值;&#125;      链接激活的状态</span><br><span class=\"line\">：focus&#123;属性:值；&#125;     获取焦点</span><br><span class=\"line\"></span><br><span class=\"line\">背景属性连写</span><br><span class=\"line\">background:red url(<span class=\"string\">\"\"</span>) no-repeat 30px 40px scroll;</span><br><span class=\"line\">background-color:</span><br><span class=\"line\">background-image:url()</span><br><span class=\"line\">background-repeat:repeat | no-repeat |repeat-x | repeat-y</span><br><span class=\"line\">background-position:left  |  right  |  center  |  top  | bottom  写一个值，居中  30px 40px</span><br><span class=\"line\">Background-attachment :scroll  是否滚动</span><br><span class=\"line\"></span><br><span class=\"line\">padding连写  内边距 定义盒子宽度</span><br><span class=\"line\">Padding: 20px;   上右下左内边距都是20px</span><br><span class=\"line\">Padding: 20px 30px;   上下20px   左右30px</span><br><span class=\"line\">Padding: 20px  30px  40px;   上内边距为20px  左右内边距为30px   下内边距为40</span><br><span class=\"line\">Padding:  20px  30px   40px  50px;   上20px 右30px  下40px  左  50px</span><br><span class=\"line\">内边距撑大盒子的问题</span><br><span class=\"line\">影响盒子宽度的因素 内边距  边框</span><br><span class=\"line\">盒子的宽度=定义的宽度+边框宽度+左右内边距</span><br><span class=\"line\">继承的盒子一般不会被撑大</span><br><span class=\"line\">包含（嵌套）的盒子，如果子盒子没有定义宽度，给子盒子设置左右内边距，一般不会撑大盒子。嵌套盒子 子元素继承父盒子宽度，不继承高度</span><br><span class=\"line\">如果子元素的padding 大于父盒子的宽度，则溢出</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">margin  外边距  定义盒子位置</span><br><span class=\"line\">margin-left   | right  |  top  |  bottom</span><br><span class=\"line\">Margin: 20px;    上下左右外边距20PX</span><br><span class=\"line\">Margin: 20px 30px;   上下20px  左右30px</span><br><span class=\"line\">Margin: 20px  30px  40px;     上20px  左右30px   下  40px</span><br><span class=\"line\">Margin: 20px  30px   40px  50px; 上20px   右30px   下40px  左50px</span><br><span class=\"line\">垂直方向外边距合并</span><br><span class=\"line\">两个盒子垂直一个设置上外边距，一个设置下外边距，取的设置较大的值。eg :一个盒子margin-bottom:20px  另一个盒子margin-top:200px  取margin最大值为200px;</span><br><span class=\"line\">嵌套的盒子外边距塌陷</span><br><span class=\"line\">解决方法:  1  给父盒子设置边框 以浏览器为标准，向下塌陷，设置父盒子边框后，以边框为标准向下</span><br><span class=\"line\">           2给父盒子overflow:hidden;   bfc   格式化上下文</span><br><span class=\"line\"></span><br><span class=\"line\">浮动 ：</span><br><span class=\"line\">当父盒子没有定义高度，嵌套盒子浮动之后，下边的元素发生位置错误</span><br><span class=\"line\">清除浮动的方法：</span><br><span class=\"line\">1.最后一个浮动元素添加标签：clear:both;   eg:&lt;div style=<span class=\"string\">\"clear:both;\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">额外标签法：在最后一个元素添加标签</span><br><span class=\"line\"></span><br><span class=\"line\">2.给父级元素使用overflow:hidden;</span><br><span class=\"line\">3.伪元素,给父级元素使用</span><br><span class=\"line\">.clearfix:after &#123;</span><br><span class=\"line\">   context:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">   display:block;</span><br><span class=\"line\">   height:0px;</span><br><span class=\"line\">   line-height:0px;</span><br><span class=\"line\">   visibility:hidden;</span><br><span class=\"line\">   clear:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.clearfix:after&#123;  兼容ie</span><br><span class=\"line\">   zoom:1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">overflow 属性值：visible |  hidden | scroll | auto</span><br><span class=\"line\">在一个盒子里面内容可见、隐藏、滚动可见、自动</span><br></pre></td></tr></table></figure>\n","text":"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br","link":"","raw":null,"photos":[],"categories":[{"name":"HTML","slug":"HTML","count":3,"path":"api/categories/HTML.json"}],"tags":[{"name":"前端","slug":"前端","count":5,"path":"api/tags/前端.json"},{"name":"HTML","slug":"HTML","count":2,"path":"api/tags/HTML.json"}]},{"title":"jquery基础（1）","slug":"jquery基础（1）","date":"2019-08-20T16:19:16.000Z","updated":"2019-08-20T16:46:33.079Z","comments":true,"path":"api/articles/jquery基础（1）.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"juquery-基础\"><a href=\"#juquery-基础\" class=\"headerlink\" title=\"juquery 基础\"></a>juquery 基础</h3><ul>\n<li>1.1jquery 1.0 版本兼容ie6,ie7,ie8</li>\n<li>选择器写法  $()函数，根据css选择元素</li>\n<li>$(“#”)   $(“.”)  、$(“ 标签”)</li>\n<li>不用加引号 ：$(this)  $(document)   $(window)   </li>\n<li>$(“p”)[0].style.backgroudColor = “red”  js原生写法</li>\n</ul>\n<h5 id=\"2-1-筛选器-且有序性；\"><a href=\"#2-1-筛选器-且有序性；\" class=\"headerlink\" title=\"2.1 筛选器  且有序性；\"></a>2.1 筛选器  且有序性；</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&quot;p&quot;)        //     所有p</span><br><span class=\"line\">$(&quot;p:first&quot;)  //    第一个p</span><br><span class=\"line\">$(&quot;p:last&quot;)   //   最后一个p</span><br><span class=\"line\">$(&quot;p:eq(3)&quot;)  //   下标为3的p   or   $(&quot;p&quot;).eq(3).animate( &#123;&quot;width:400&quot;&#125; ,1000)</span><br><span class=\"line\">$(&quot;p:It(3)&quot;   //   下标小于3的p</span><br><span class=\"line\">$(&quot;p:gt(3)&quot;)   //  下标大于3的p</span><br><span class=\"line\">$(&quot;p:odd&quot;)   //  下标为奇数的p</span><br><span class=\"line\">$(&quot;p:even)    // 下标为偶数的p</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-2-设置多个样式样式-“p”-css-Json\"><a href=\"#2-2-设置多个样式样式-“p”-css-Json\" class=\"headerlink\" title=\"2.2 设置多个样式样式$(“p”).css(Json)\"></a>2.2 设置多个样式样式$(“p”).css(Json)</h5><ul>\n<li>设置的单个样式$(“p”).css(“backgroundColor”,”red”)   k   ，  v<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&quot;p:lt(3)&quot;).css(&#123;</span><br><span class=\"line\">    &quot;width&quot;:40,</span><br><span class=\"line\">    &quot;height&quot;:40,</span><br><span class=\"line\">    &quot;background-color&quot;:&quot;red&quot;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"2-3-animate\"><a href=\"#2-3-animate\" class=\"headerlink\" title=\"2.3 animate\"></a>2.3 animate</h5><ul>\n<li>语法 $(“选择器”).animate( {终点json} , 动画时间 ，回调函数 )<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&quot;p:eq(6)&quot;).animate(&#123;&quot;left&quot;:600&#125;,2000,function()&#123;</span><br><span class=\"line\">    $(this).css(&quot;background-color&quot;,&quot;gold&quot;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"2-4-事件监听\"><a href=\"#2-4-事件监听\" class=\"headerlink\" title=\"2.4 事件监听\"></a>2.4 事件监听</h5><ul>\n<li>js原生 odiv.onclick = function() {  }     等同于   $(“p”).click(function(){      })</li>\n<li>鼠标进入 mouseover</li>\n<li>鼠标进出 mouseLeave<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    $(&quot;p&quot;).mouseenter(function()&#123;</span><br><span class=\"line\">       $(this).css(&quot;background-color&quot;,&quot;red&quot;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">    $(&quot;p&quot;).mouseleave(function()&#123;</span><br><span class=\"line\">    $(this).css(&quot;background-color&quot;,&quot;#ccc&quot;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"2-5-轮播图\"><a href=\"#2-5-轮播图\" class=\"headerlink\" title=\"2.5 轮播图\"></a>2.5 轮播图</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">   //克隆第一个li，并且追加到ul里面</span><br><span class=\"line\">   $(&quot;.m_unit ul li:first&quot;).clone().appendTo(&quot;.m_unit ul&quot;);</span><br><span class=\"line\">   var idx = 0;</span><br><span class=\"line\">   $(&quot;.rightBtn&quot;).click(function()&#123;</span><br><span class=\"line\">      $(&quot;.m_unit&quot;).animate(&#123;&quot;left&quot;:idx  -560&#125;,1000,function()&#123;</span><br><span class=\"line\">         idx ++;</span><br><span class=\"line\">         if(idx &gt; 4)&#123;</span><br><span class=\"line\">            idx = 0;</span><br><span class=\"line\">            $(this).css(&quot;left&quot;,0);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-6-index-索引值-返回第一个元素同辈元素的值\"><a href=\"#2-6-index-索引值-返回第一个元素同辈元素的值\" class=\"headerlink\" title=\"2.6  index() 索引值  返回第一个元素同辈元素的值\"></a>2.6  index() 索引值  返回第一个元素同辈元素的值</h5><h5 id=\"2-7-each-表示遍历节点，\"><a href=\"#2-7-each-表示遍历节点，\" class=\"headerlink\" title=\"2.7 each()  表示遍历节点，\"></a>2.7 each()  表示遍历节点，</h5> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&quot;p&quot;).each(function(i)&#123;</span><br><span class=\"line\">   //$(this).css(&quot;width&quot;,50 * i);</span><br><span class=\"line\">   $(this).animate(&#123;&quot;width&quot;:i*50&#125;,1000);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-8-length（）-和-size-（）-元素个数\"><a href=\"#2-8-length（）-和-size-（）-元素个数\" class=\"headerlink\" title=\"2.8 length（） 和 size （）  元素个数\"></a>2.8 length（） 和 size （）  元素个数</h5><h5 id=\"2-9-get\"><a href=\"#2-9-get\" class=\"headerlink\" title=\"2.9 get()\"></a>2.9 get()</h5> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回的是原生方法</span><br><span class=\"line\">$(&quot;p&quot;).get(2).innerHTML = &quot;哈哈&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-动画相关方法：\"><a href=\"#3-动画相关方法：\" class=\"headerlink\" title=\"3.动画相关方法：\"></a>3.动画相关方法：</h5> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show()   让display:none 显示</span><br><span class=\"line\">hide()   or  display:none</span><br><span class=\"line\">toggle()  切换样式</span><br><span class=\"line\">show() hide() 、 toggle() 填写数值 ；展示width height opacity 有动画效果</span><br><span class=\"line\">$(div).show([时间]，[回调函数])</span><br><span class=\"line\">$(&quot;input:eq(3)&quot;).click(function()&#123;</span><br><span class=\"line\">    $(&quot;div&quot;).toggle(1000);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">3.1 slideDown() 下滑展开 、slideUp() 上、slideToggle() 方法</span><br><span class=\"line\">1.slideDown() ；在css样式中，只有display:none , 才能调用slideDown()</span><br><span class=\"line\">  动画机制：height  0----&gt;设置样式高度  </span><br><span class=\"line\">$(&quot;div&quot;).show();</span><br><span class=\"line\">var oldHight =$(&quot;div&quot;).css(&quot;height&quot;);</span><br><span class=\"line\">$(&quot;div&quot;).css(&quot;height&quot;,0)</span><br><span class=\"line\">$(&quot;div&quot;).animate(&#123;&quot;height:oldHight&quot;&#125;,1000)</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 fadein（）淡入  fadeOut()   淡出 fadeTo()  、fadeToggle()</span><br><span class=\"line\">1.fadeIn()     在css样式中，只有display:none , 才能调用fadeIn()</span><br><span class=\"line\">  动画机制：opaticy t  0----&gt;设置透明度 </span><br><span class=\"line\">2. fadeTo有三个参数，第一个参数是动画时间，第二个参数是要变得透明度，第三个是回调函数</span><br><span class=\"line\">$(&quot;div&quot;).fadeTo(1000,0.3,function()&#123;</span><br><span class=\"line\">    alert(&quot;透明结束&quot;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">3.3 stop();</span><br><span class=\"line\">stop(false,false)   |   stop(true，false)  |    stop(true ,true)   |  stop(true ,flase)    |  finish</span><br><span class=\"line\">公式 ： stop(清除队列，清除瞬间完成)</span><br><span class=\"line\">1.1停止当前的动画，但是不清除队列，立即执行后面的animate动画</span><br><span class=\"line\">$(&quot;div&quot;).stop();</span><br><span class=\"line\">$(&quot;input:eq(0)&quot;).click(function()&#123;</span><br><span class=\"line\">    $(&quot;div&quot;).stop();</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">1.2 停止当前动画，并且清除队列，盒子留在了此地</span><br><span class=\"line\">$(&quot;div&quot;).stop(true);</span><br><span class=\"line\">$(&quot;input:eq(1)&quot;).click(function()&#123;</span><br><span class=\"line\">    $(&quot;div&quot;).stop(true);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">1.3 瞬间完成动画，并且清除队列</span><br><span class=\"line\">$(&quot;div&quot;).stop(true,true);</span><br><span class=\"line\"></span><br><span class=\"line\">1.4 瞬间完成动画，但是不清除队列</span><br><span class=\"line\">$(&quot;div&quot;).stop(false,true);</span><br><span class=\"line\"></span><br><span class=\"line\">1.5 瞬间完成动画</span><br><span class=\"line\">$(&quot;div&quot;).finish();</span><br><span class=\"line\"></span><br><span class=\"line\">1.6stop 可以停止动画的积累；</span><br><span class=\"line\"></span><br><span class=\"line\">1.7 delay()延迟加载；</span><br><span class=\"line\">$(&quot;div&quot;).delay(1000).hide(1)</span><br><span class=\"line\"></span><br><span class=\"line\">1.8 is(&quot;:animated&quot;）</span><br><span class=\"line\">is() 方法表示身份探测 ，返回true  、false;</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-原生节点关系\"><a href=\"#4-原生节点关系\" class=\"headerlink\" title=\"4.原生节点关系\"></a>4.原生节点关系</h5> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">任何元素值有:nodeType ,值有1-11</span><br><span class=\"line\"> nodeType [1.元素节点 ，  3 文本节点 ，  8 注释节点，   9 document，  10 dtd ]</span><br><span class=\"line\">alert(document.nodeType)   // 9</span><br><span class=\"line\">4.1 任何元素都有childNodes 属性  </span><br><span class=\"line\">1.高级浏览器兼容问题 chrome  ie9 10   有空格，会算进去  </span><br><span class=\"line\">childNodes[0].nodeType  //3</span><br><span class=\"line\">2.ie 浏览器6 、7 、8  认为 不会算空格  childNodes[0].nodeType    </span><br><span class=\"line\">，</span><br><span class=\"line\">//1</span><br><span class=\"line\">所以为了没有兼任问题，需要遍历节点的时候，HTML 结构就不能有空格。</span><br><span class=\"line\"></span><br><span class=\"line\">4.2 parentNode  (父类元素)</span><br><span class=\"line\">4.3 previousSibiling  上一个元素 ，低级浏览器 ：元素    高级浏览器空格；</span><br><span class=\"line\"></span><br><span class=\"line\">小效果  ：</span><br><span class=\"line\">复选框 、文本框 、 单选按钮，值被改变的时候，触发的是onchange 事件。</span><br><span class=\"line\">复选框、单选框选中情况，是属性 input。checked ,值是boolean</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-jquery-的节点关系\"><a href=\"#5-jquery-的节点关系\" class=\"headerlink\" title=\"5. jquery 的节点关系\"></a>5. jquery 的节点关系</h5> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.children()  亲儿子查询</span><br><span class=\"line\">$(&quot;.box&quot;).children().css(&quot;backgroundColor&quot;,&quot;pink&quot;)</span><br><span class=\"line\">1.1.children(参数) </span><br><span class=\"line\">$(&quot;.box&quot;).children(&quot;h3&quot;).css(&quot;backgroundColor&quot;,&quot;pink&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">2 find（） 必须写参数</span><br><span class=\"line\">$(&quot;.box&quot;).find(&quot;*&quot;).eq(0).css(&quot;background-color&quot;,&quot;pink&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">3.parent();</span><br><span class=\"line\">4.parents() 所有元素的祖先节点</span><br><span class=\"line\">5.siblings()   自己颜色不变，其他兄弟颜色变色 排他性</span><br><span class=\"line\">$(this).css(&quot;backgroundColor&quot;,&quot;red&quot;).siblings().css(&quot;backgroundColor&quot;,&quot;#ccc&quot;);</span><br><span class=\"line\">$(this).addClass(&quot;cur&quot;).siblings().removeClass(&quot;cur&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">6.prevSibing()  、 nextSibing() 、prevAll()  、nextAll()</span><br><span class=\"line\">前一个兄弟 、后一个兄弟、前所有兄弟、后所有兄弟</span><br><span class=\"line\">感谢jquery 屏蔽所有不兼容，只选择 nodeType =1 的元素；</span><br><span class=\"line\"></span><br><span class=\"line\">5.1 原生节点操作</span><br><span class=\"line\">1 增加节点</span><br><span class=\"line\">2 删除节点 </span><br><span class=\"line\">3 移动节点</span><br><span class=\"line\">4 替换节点</span><br><span class=\"line\">1.创建节点 -----及节点追加；创建的节点没在dom 树上，需要追加上才显示。</span><br><span class=\"line\">// 创建一个li 标签 用变量ol来表示 创建的节点不是任何节点的儿子</span><br><span class=\"line\">//也就说没在DOM 上</span><br><span class=\"line\">var ul = document.getElementsByTagName(&quot;ul&quot;)[0];</span><br><span class=\"line\">var oli = document.createElement(&quot;li&quot;);  //创建节点</span><br><span class=\"line\">oli.innerHTML=&quot;DDD&quot;  // 改变节点的内容</span><br><span class=\"line\">ul.appendChild(oli); //追加节点</span><br><span class=\"line\">2.insertBefore 创建节点前插入 </span><br><span class=\"line\">父亲.insertBefore(新，旧)</span><br><span class=\"line\"></span><br><span class=\"line\">3.removeChild()  删除节点</span><br><span class=\"line\">父类.removeChild(子类)</span><br><span class=\"line\"></span><br><span class=\"line\">4.replaceChild  替换节点</span><br><span class=\"line\">父类.replaceChild(new ,old )</span><br><span class=\"line\"></span><br><span class=\"line\">5.cloneNode()</span><br><span class=\"line\">克隆节点 ，参数true 表示深复制，节点里面的所有内容一同复制。</span><br><span class=\"line\">复制的节点也是孤儿节点，所以也需要使用appChild insertBefore replaChild 来添加上DOM 树。</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-query-的节点操作\"><a href=\"#6-query-的节点操作\" class=\"headerlink\" title=\"6.query 的节点操作\"></a>6.query 的节点操作</h5> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建节点 父亲.append(儿子) 实际上内部就是用innerHTML 添加 </span><br><span class=\"line\">追加于 appendTo()  儿子.appendTo(父亲)</span><br><span class=\"line\">$(&quot;.box&quot;).append(&quot;&lt;p&gt; 哈哈哈哈&lt;/p&gt;&quot;)</span><br><span class=\"line\">6.1 prepend()追加在第一个儿子的前面</span><br><span class=\"line\">6.2 after() 插入前</span><br><span class=\"line\">6.3 before() 插入后</span><br><span class=\"line\">6.4 insertBefore 、 insertAfter  选择性插入</span><br><span class=\"line\">$(&quot;&lt;p&gt;memmmmda&lt;/p&gt;&quot;).insertBefore($(&quot;p&quot;)[2])</span><br><span class=\"line\">6.5wrap()  、allwrap()  元素包裹</span><br><span class=\"line\">$(&quot;a&quot;).wrap(&quot;&lt;span&gt;&lt;/span&gt;&quot;)  //每一个a 元素 被一个span 标签包裹</span><br><span class=\"line\">$(&quot;a&quot;).wrapAll(&quot;&lt;span&gt;&lt;/span&gt;&quot;)  // 所有a元素被span 标签包裹</span><br><span class=\"line\">6.6 replacewidth(&quot;&lt;span&gt;&quot;&lt;/span&gt;&quot;)</span><br><span class=\"line\">$(&quot;a&quot;).replaceWith(&quot;&lt;span&gt;&lt;/span&gt;&quot;)   // a 标签 被span 标签替换</span><br><span class=\"line\">6.7empty();  把所有段落的子元素（包括文本节点删除</span><br><span class=\"line\">6.8 remove() ；</span><br><span class=\"line\">6.9 detach() 删除所有的匹配元素</span><br><span class=\"line\"></span><br><span class=\"line\">6.4 clone() 克隆节点</span><br><span class=\"line\">$(&quot;ul&quot;).append($(&quot;ul li&quot;).eq(0).clone());</span><br><span class=\"line\">$(&quot;ul li&quot;).eq(0).clone().appendTo(&quot;ul&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">6.5 jquery 拖拽事件  参数已json 配置。</span><br><span class=\"line\">$(&quot;div&quot;).draggable();</span><br><span class=\"line\">$(&quot;p&quot;).draggable(&#123;</span><br><span class=\"line\">    axis:&quot;x&quot;,  //约束在x轴</span><br><span class=\"line\">    containment:&quot;_parent_&quot;  //约束在父盒中</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","text":"juquery 基础1.1jquery 1.0 版本兼容ie6,ie7,ie8选择器写法  $()函数，根据css选择元素$(“#”)   $(“.”)  、$(“ 标签”)不用加引号 ：$(this)  $(document)   $(window)   $(“p”)[0].s","link":"","raw":null,"photos":[],"categories":[{"name":"jquery","slug":"jquery","count":1,"path":"api/categories/jquery.json"}],"tags":[{"name":"前端","slug":"前端","count":5,"path":"api/tags/前端.json"},{"name":"jquery","slug":"jquery","count":1,"path":"api/tags/jquery.json"}]},{"title":"Js基础（1）","slug":"Js基础（1）","date":"2019-08-20T15:41:53.000Z","updated":"2019-08-20T16:16:50.472Z","comments":true,"path":"api/articles/Js基础（1）.json","excerpt":"","keywords":null,"cover":null,"content":"<p>所有数字都是Number 包括：所有数字：infinity \\ Nan<br>赋值决定变量的类型；动态数据的类型；</p>\n<ol>\n<li>空字符：也是字符类型</li>\n<li>值是undefind ;类型也是undefind;</li>\n<li>转换：parseInt() 字符串转换成数字</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var b =parseInt(a);   直接截取整数部分。如果不能转换 返回NAN;</span><br><span class=\"line\">console.log(parseInt(21,8)) 进制 2*8+1 输出：17；</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>转换：parseFloat 如果不能转换 返回NAN;</li>\n<li><p>字符串：数字+空字符；var c=b +””;</p>\n</li>\n<li><p>只要出现了undefind 参与运算，结果都是NaN</p>\n</li>\n<li>false,true,null,都能进行运算<br>null 转换0； true 转换 1，false转换：0 <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(3+null); //3</span><br><span class=\"line\">console.log(3+ true) //4</span><br><span class=\"line\">console.log(3+ false) //3</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"不纯的数字无法转换：\"><a href=\"#不纯的数字无法转换：\" class=\"headerlink\" title=\"不纯的数字无法转换：\"></a>不纯的数字无法转换：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(3*“8天”)；//NaN</span><br><span class=\"line\">console.log(3*undefind)； 输出结果；//NaN</span><br><span class=\"line\">console.log(6/0) //Infinity</span><br><span class=\"line\">console.log(0/0) //NaN</span><br><span class=\"line\">console.log(Infinity - Infinity) //NaN</span><br><span class=\"line\">console.log(Infinity / Infinity) //NaN</span><br></pre></td></tr></table></figure>\n<h5 id=\"短路运算：\"><a href=\"#短路运算：\" class=\"headerlink\" title=\"短路运算：\"></a>短路运算：</h5><ul>\n<li>a &amp;&amp; b ,a如果是一个false,那么不会管b是什么，直接输出false就行了，直接输出a</li>\n<li>a &amp;&amp; b, a如果是一个true,那么也不会管b是什么，直接把b当作结果结果输出了。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">false &amp;&amp; true;  //false;</span><br><span class=\"line\">true &amp;&amp; true; //1</span><br><span class=\"line\">true &amp;&amp; &apos;12&apos;  // &apos;12&apos;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"短路或-a-b\"><a href=\"#短路或-a-b\" class=\"headerlink\" title=\"短路或|| a||b\"></a>短路或|| a||b</h5><ol>\n<li><p>计算机发现a 为真，那么则仍a ,如果a是假，那么b;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 || 18 //前面假，仍后面</span><br><span class=\"line\">null || 1</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算：先计算括号， &amp;&amp;  || </p>\n</li>\n<li>运算符的计算顺序</li>\n</ol>\n<ul>\n<li>++ –！贴身  —&gt; 数学 —-&gt;比较 —-&gt; </li>\n</ul>\n<h5 id=\"逻辑-—-gt-赋值\"><a href=\"#逻辑-—-gt-赋值\" class=\"headerlink\" title=\"逻辑 —-&gt; 赋值\"></a>逻辑 —-&gt; 赋值</h5><ol>\n<li>关系运算的结果本身就是boolean 值。</li>\n<li>语法：switch() {case ‘ ‘:alert();break;}</li>\n</ol>\n<ul>\n<li>switch 里面可以放变量值  放Boolean 值时； case 语句进行逻辑运算<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switch(true)&#123;</span><br><span class=\"line\">case score&lt;60 : alert(&apos;不及格&apos;); </span><br><span class=\"line\">case score&lt;70: alert(&apos;及格&apos;)；</span><br><span class=\"line\">break;case score&lt;100: alert(&apos;优秀&apos;)； </span><br><span class=\"line\">default: alert(&apos;你输入的成绩有误&apos;)； &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol start=\"3\">\n<li>表达式  ：三元运算：条件 ？ true : flase</li>\n</ol>\n<ul>\n<li>for(var i=1 ; i&lt;100;i++){console.log(‘sh’)}  alert（’跳出循环’)；</li>\n<li>for ； 如果条件表达式为true    执行步骤： var i=1 ;i&lt;100; console.log(‘sh’) ; i++;直到i&gt;100 跳出循环</li>\n<li>for ； 如果条件表达式为flase; 什么也不输出；直接跳出循环； </li>\n</ul>\n","text":"所有数字都是Number 包括：所有数字：infinity \\ Nan<br>赋值决定变量的类型；动态数据的类型；空字符：也是字符类型值是undefind ;类型也是undefind;转换：parseInt() 字符串转换成数字1<br>2<br>var b =parseInt(","link":"","raw":null,"photos":[],"categories":[{"name":"Js","slug":"Js","count":1,"path":"api/categories/Js.json"}],"tags":[{"name":"前端","slug":"前端","count":5,"path":"api/tags/前端.json"},{"name":"JS","slug":"JS","count":1,"path":"api/tags/JS.json"}]},{"title":"HTML基础（4)","slug":"HTML基础（4","date":"2019-02-20T10:39:58.000Z","updated":"2019-02-22T17:00:18.179Z","comments":true,"path":"api/articles/HTML基础（4.json","excerpt":"","keywords":null,"cover":null,"content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布局模型：</span><br><span class=\"line\">流动布局 flow布局 是网页的默认布局，y</span><br><span class=\"line\">第一点：块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。实际上，块状元素都会以行的形式占据位置。</span><br><span class=\"line\">第二点，在流动模型下，内联元素都会在所处的包含元素内从左到右水平分布显示。</span><br><span class=\"line\"></span><br><span class=\"line\">浮动布局</span><br><span class=\"line\"><span class=\"built_in\">float</span>:  left   |   right</span><br><span class=\"line\">任何元素在默认情况下是不能浮动的，但可以用 CSS 定义为浮动，如 div、p、table、img 等元素都可以被定义为浮动。</span><br><span class=\"line\"></span><br><span class=\"line\">层模型（绝对定位、相对定位，固定定位）</span><br><span class=\"line\">1、绝对定位(position: absolute)</span><br><span class=\"line\">特点：</span><br><span class=\"line\">★元素使用绝对定位之后不占据原来的位置（脱标）</span><br><span class=\"line\">★元素使用绝对定位，位置是从浏览器出发。</span><br><span class=\"line\">★嵌套的盒子，父盒子没有使用定位，子盒子绝对定位，子盒子位置是从浏览器出发。</span><br><span class=\"line\">★嵌套的盒子，父盒子使用绝对定位，子盒子绝对定位，子盒子位置是从父元素位置出发。</span><br><span class=\"line\"></span><br><span class=\"line\">2、相对定位(position: relative)</span><br><span class=\"line\">★使用相对定位，位置从自身出发。</span><br><span class=\"line\">★还占据原来的位置。</span><br><span class=\"line\">★子绝父相（父元素相对定位，子元素绝对定位）</span><br><span class=\"line\">★行内元素使用相对定位不能转行内块</span><br><span class=\"line\"></span><br><span class=\"line\">3、固定定位(position: fixed)</span><br><span class=\"line\">★固定定位之后，不占据原来的位置（脱标）</span><br><span class=\"line\">★元素使用固定定位之后，位置从浏览器出发。</span><br><span class=\"line\">★元素使用固定定位之后，会转化为行内块（不推荐，推荐使用display:inline-block;）</span><br><span class=\"line\"></span><br><span class=\"line\">Flex 布局</span><br><span class=\"line\">Flex 是 Flexible Box 的缩写，意为<span class=\"string\">\"弹性布局\"</span>，用来为盒状模型提供最大的灵活性。 块内元素和行内元素均可使用display:flex</span><br><span class=\"line\">display:flex;</span><br><span class=\"line\">注意，设为 Flex 布局以后，子元素的<span class=\"built_in\">float</span>、clear和vertical-align属性将失效。</span><br><span class=\"line\">容器属性</span><br><span class=\"line\">flex-direction 布局方向  row | row-reverse | column | column-reverse; row:水平： column:垂直</span><br><span class=\"line\">flex-wrap 换行 nowrap | wrap | wrap-reverse</span><br><span class=\"line\">flex-flow  flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap</span><br><span class=\"line\">justify-content 对齐方式 flex-start | flex-end | center | space-between | space-around; space:l两端对齐 间隔对齐</span><br><span class=\"line\">align-items 属性定义项目在交叉轴上如何对齐。flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">align-content align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</span><br><span class=\"line\">flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class=\"line\">项目属性：</span><br><span class=\"line\">order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</span><br><span class=\"line\">flex-grow 属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</span><br><span class=\"line\">flex-shrink 缩小比例，默认为1，</span><br><span class=\"line\">flex-basis 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</span><br><span class=\"line\">flexflex 属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</span><br><span class=\"line\">align-self</span><br></pre></td></tr></table></figure>","text":"1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br","link":"","raw":null,"photos":[],"categories":[{"name":"HTML","slug":"HTML","count":3,"path":"api/categories/HTML.json"}],"tags":[{"name":"前端","slug":"前端","count":5,"path":"api/tags/前端.json"},{"name":"HTML","slug":"HTML","count":2,"path":"api/tags/HTML.json"}]},{"title":"ps(当个愉快的切图仔吧)","slug":"ps-当个愉快的切图仔吧","date":"2019-08-21T11:36:03.000Z","updated":"2019-08-21T11:55:49.144Z","comments":true,"path":"api/articles/ps-当个愉快的切图仔吧.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"切图：\"><a href=\"#切图：\" class=\"headerlink\" title=\"切图：\"></a>切图：</h3><h6 id=\"切图之前必要准备：\"><a href=\"#切图之前必要准备：\" class=\"headerlink\" title=\"切图之前必要准备：\"></a>切图之前必要准备：</h6><ul>\n<li>编辑  – 首选项—单位与标尺   {ctrl +K}  标尺和文字修改为像素。</li>\n<li>窗口–打开面板–f8(信息) 、f7(图层)</li>\n<li>移动：工具 自动选择 图层移动  然后进行鼠标操作，移动图片  ；  ！ 建议不适用 组移动图片  ； </li>\n<li>撤销 一步ctrl +z ;;;;;;;; 撤销到前前历史记录 ；  ctrl+ alt  +zzzzzz</li>\n<li>魔棒工具：–容差  值  和 范围 成正比</li>\n<li>缩放：ctrl + 放大   ctrl -  缩小  alt 加鼠标滚轮</li>\n<li>裁减：点击裁剪工具 ；双击裁剪范围，就保存裁剪的范围了。</li>\n<li>取色器<br>辅助视图： 视图菜单开启：对齐 标尺 {ctrl + r}  显示勾选参考线 显示额外内容</li>\n</ul>\n<h4 id=\"2-获取信息\"><a href=\"#2-获取信息\" class=\"headerlink\" title=\"2.获取信息\"></a>2.获取信息</h4><h5 id=\"尺寸信息\"><a href=\"#尺寸信息\" class=\"headerlink\" title=\"尺寸信息\"></a>尺寸信息</h5><h5 id=\"颜色信息\"><a href=\"#颜色信息\" class=\"headerlink\" title=\"颜色信息\"></a>颜色信息</h5><ol>\n<li>矩形选项框–选定  设置w h</li>\n<li>测量文字大小和行高 ：</li>\n</ol>\n<ul>\n<li>点选工具栏第一个图标，选择位置，选择文字位置；图层显示相应位置 </li>\n<li>点击工具 T 图标 鼠标右键自己尝试呢</li>\n<li>点击文字范围 </li>\n</ul>\n<p>在导航条显示 T 12像素  点击一个目录图标显示行高和段落<br>2.1  测量选区<br>2.2 矩形选区工具</p>\n<ul>\n<li>添加选区  按住shift + 添加  </li>\n<li>从选取区减去按住alt -减去    </li>\n<li>从选取交叉选取交叉 shift +alt</li>\n</ul>\n<p>取色：<br>边框色<br>背景色<br>文字色</p>\n<p>图片和文字结合： 独立图层：吸管工具 和取色器。<br>魔棒工具：确定线性渐变的方法； 点击移动  点击魔棒  点击背景颜色位置，点击取色器。</p>\n<h5 id=\"切图之前：\"><a href=\"#切图之前：\" class=\"headerlink\" title=\"切图之前：\"></a>切图之前：</h5><ul>\n<li>图片存为格式PNG8,PNG24 ie 6半透明</li>\n<li>隐藏文字直留背景：</li>\n</ul>\n<h5 id=\"若文字为独立图层-，隐藏文字图层；\"><a href=\"#若文字为独立图层-，隐藏文字图层；\" class=\"headerlink\" title=\"若文字为独立图层 ，隐藏文字图层；\"></a>若文字为独立图层 ，隐藏文字图层；</h5><ul>\n<li>找到文字图层</li>\n<li>去掉眼睛图标</li>\n</ul>\n<h5 id=\"若文字和背景合并，平铺背景覆盖文字\"><a href=\"#若文字和背景合并，平铺背景覆盖文字\" class=\"headerlink\" title=\"若文字和背景合并，平铺背景覆盖文字\"></a>若文字和背景合并，平铺背景覆盖文字</h5><p>矩形选框<br>自由变换 ctrl +t<br>使用移动工具alt</p>\n<ol>\n<li>点击矩形框  </li>\n<li>点击移动按钮 </li>\n<li>安装alt键  </li>\n<li>安装shift 水平移动<br>5 .向右脱  相当于====复制图层遮挡文字 </li>\n</ol>\n<h4 id=\"切图：png-24\"><a href=\"#切图：png-24\" class=\"headerlink\" title=\"切图：png 24\"></a>切图：png 24</h4><ul>\n<li>移动工具所需图层 按 ctrl 多选</li>\n<li>右键合并图层 ctrl +e</li>\n<li>在右键复制图层到新文件 <ul>\n<li>或直接拖至已有文件 新建（ctrl +n ）</li>\n</ul>\n<ol>\n<li>单个文件裁剪 ： 新建图层复制   ，矩形框选中，图像进行裁剪。</li>\n<li>多个文件，先选中图层，找到根文件合并组，新建图层复制   ，矩形框选中，图像进行裁剪。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"切图-png-8\"><a href=\"#切图-png-8\" class=\"headerlink\" title=\"切图 :png 8\"></a>切图 :png 8</h4><ul>\n<li>带背景切</li>\n<li>合并可见图层 （shift + ctrl + e）</li>\n<li>矩形框选择内容</li>\n<li>魔棒工具去除多余部分。 按住alt减去</li>\n<li>1.图层–&gt; 合并可见图层 –&gt;才可以接下来的操作。<br>矩形选框–&gt; 点击魔棒工具到矩形框内 –&gt;点alt魔棒工具下有个 - 符号 ，在点击矩形框内一点 –&gt;复制图层-ctrl+c +v </li>\n</ul>\n<h4 id=\"可平复的背景切图\"><a href=\"#可平复的背景切图\" class=\"headerlink\" title=\"可平复的背景切图\"></a>可平复的背景切图</h4><ul>\n<li>矩形选框工具选取一块区域</li>\n<li>复制粘贴到文件夹中</li>\n<li>平铺内容充满文件的宽（x 轴）或高（y轴）</li>\n</ul>\n<h4 id=\"切片工具：\"><a href=\"#切片工具：\" class=\"headerlink\" title=\"切片工具：\"></a>切片工具：</h4><ul>\n<li>适用一刀切的页面</li>\n<li>拉参考线</li>\n<li>选择切片工具</li>\n<li>点击基于参考线的切片按钮  修改切片选择工具  修改切片名称</li>\n<li>保存（全选切片 ，统一设置存储格式）</li>\n</ul>\n<h4 id=\"保存\"><a href=\"#保存\" class=\"headerlink\" title=\"保存\"></a>保存</h4><ul>\n<li>存储所需内容</li>\n<li>复制 ctrl+c  新建 ctrl+n  粘贴 ctrl +v </li>\n</ul>\n<h4 id=\"保存类型2\"><a href=\"#保存类型2\" class=\"headerlink\" title=\"保存类型2\"></a>保存类型2</h4><ul>\n<li>当图片色彩不太丰富无论有无透明要求</li>\n<li>请保存PNG8    存储为web格式： 杂边：无，无防色  存储设置</li>\n</ul>\n<h5 id=\"当图片有半透明要求-请保存PNG24格式。对图片不进行压缩\"><a href=\"#当图片有半透明要求-请保存PNG24格式。对图片不进行压缩\" class=\"headerlink\" title=\"当图片有半透明要求 请保存PNG24格式。对图片不进行压缩\"></a>当图片有半透明要求 请保存PNG24格式。对图片不进行压缩</h5><h5 id=\"为了图片质量-请保留一份PSD-，在psd上修改\"><a href=\"#为了图片质量-请保留一份PSD-，在psd上修改\" class=\"headerlink\" title=\"为了图片质量  请保留一份PSD ，在psd上修改\"></a>为了图片质量  请保留一份PSD ，在psd上修改</h5><h5 id=\"修改和维护：\"><a href=\"#修改和维护：\" class=\"headerlink\" title=\"修改和维护：\"></a>修改和维护：</h5><ul>\n<li>图像  –&gt; 画布大小  定位</li>\n<li>移动： 独立图层：移动工具拖拽</li>\n<li>非独立图层  ： 矩形选框工具，移动工具移动</li>\n<li>裁剪画布 ；1.先选中区域   ，2.图像–裁剪</li>\n</ul>\n<p>修改png8图片<br>需要更改颜色模式：rgb颜色  图像  –&gt; 模式—&gt; rgb模式<br>sprite:减少网络请求，提升网页加载速度。</p>\n<p>合并–排列 图片之间保留空隙。<br>排列方向：横向、纵向；</p>\n<h5 id=\"合并-分类\"><a href=\"#合并-分类\" class=\"headerlink\" title=\"合并-分类\"></a>合并-分类</h5><ul>\n<li>把同属于一个模块的图片进行合并</li>\n<li>把大小相近的图片进行合并</li>\n<li>把色彩相近的图片进行合并</li>\n<li>综合以上方式合并</li>\n</ul>\n","text":"切图：切图之前必要准备：编辑  – 首选项—单位与标尺   {ctrl +K}  标尺和文字修改为像素。窗口–打开面板–f8(信息) 、f7(图层)移动：工具 自动选择 图层移动  然后进行鼠标操作，移动图片  ；  ！ 建议不适用 组移动图片  ； 撤销 一步ctrl +z ;","link":"","raw":null,"photos":[],"categories":[{"name":"PS","slug":"PS","count":1,"path":"api/categories/PS.json"}],"tags":[{"name":"前端","slug":"前端","count":5,"path":"api/tags/前端.json"}]}]}